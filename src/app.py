import streamlit as st
from transformers import AutoModelForCausalLM, AutoTokenizer
import torch

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ –∏ —Ç–æ–∫–µ–Ω–∏–∑–∞—Ç–æ—Ä–∞
@st.cache_resource
def load_model_and_tokenizer():
    tokenizer = AutoTokenizer.from_pretrained("microsoft/DialoGPT-small")
    model = AutoModelForCausalLM.from_pretrained("microsoft/DialoGPT-small")
    if torch.cuda.is_available():
        model = model.cuda()
    return model, tokenizer

model, tokenizer = load_model_and_tokenizer()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –º–æ–¥–µ–ª–∏
if "dialogue_history_ids" not in st.session_state:
    st.session_state.dialogue_history_ids = None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∏–ª—è
def apply_style_to_response(response, style):
    if style == "friendly":
        return response + " üòä"
    elif style == "sarcastic":
        return response + " üôÑ Oh, really?"
    return response  # –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞
def generate_response(prompt, style="neutral", max_length=100):
    # –¢–æ–∫–µ–Ω–∏–∑–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç
    new_user_input_ids = tokenizer.encode(prompt + tokenizer.eos_token, return_tensors='pt')
    if torch.cuda.is_available():
        new_user_input_ids = new_user_input_ids.cuda()

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å –∏—Å—Ç–æ—Ä–∏–µ–π –¥–∏–∞–ª–æ–≥–∞, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    if st.session_state.dialogue_history_ids is not None:
        bot_input_ids = torch.cat([st.session_state.dialogue_history_ids, new_user_input_ids], dim=-1)
    else:
        bot_input_ids = new_user_input_ids

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    chat_history_ids = model.generate(
        bot_input_ids,
        max_length=max_length + bot_input_ids.shape[-1],
        pad_token_id=tokenizer.eos_token_id,
        do_sample=True,
        top_k=100,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º top_k –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
        top_p=0.95,
        temperature=0.9  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º temperature –¥–ª—è –±–æ–ª—å—à–µ–π –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
    )

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
    st.session_state.dialogue_history_ids = chat_history_ids

    # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    response = tokenizer.decode(chat_history_ids[:, bot_input_ids.shape[-1]:][0], skip_special_tokens=True)
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª—å –∫ –æ—Ç–≤–µ—Ç—É
    styled_response = apply_style_to_response(response, style)
    return styled_response.strip()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("–ß–∞—Ç-–±–æ—Ç —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏")

# –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
st.markdown("""
–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ DialoGPT-small.  
–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞: –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏–ª–∏ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π.
""")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

# –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
prompt = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å:", value="How are you today?")
style = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞:", ["neutral", "friendly", "sarcastic"])
max_length = st.slider("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞:", min_value=20, max_value=150, value=100)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞
if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç"):
    with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞..."):
        response = generate_response(prompt, style=style, max_length=max_length)
    st.success("–û—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç –≤ –Ω–∞—á–∞–ª–æ –∏—Å—Ç–æ—Ä–∏–∏
    st.session_state.chat_history.insert(0, {"prompt": prompt, "style": style, "response": response})

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ (–Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–≤–µ—Ä—Ö—É)
if st.session_state.chat_history:
    st.write("### –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞")
    for chat in st.session_state.chat_history:
        st.write(f"**–ó–∞–ø—Ä–æ—Å:** {chat['prompt']}")
        st.write(f"**–°—Ç–∏–ª—å:** {chat['style']}")
        st.write(f"**–û—Ç–≤–µ—Ç:** {chat['response']}")
        st.write("---")